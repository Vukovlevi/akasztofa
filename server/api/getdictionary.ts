import * as fs from "fs";
import * as fsPromises from "fs/promises";
import * as https from "https";

const runtimeConfig = useRuntimeConfig();
const DEFAULT_WORDS = [
  "ablak",
  "abroncs",
  "ad",
  "agg",
  "aggodalom",
  "ajak",
  "akar",
  "akarat",
  "akaszt",
  "alacsony",
  "alma",
  "alszik",
  "altat",
  "angyal",
  "anya",
  "apa",
  "arany",
  "aranyos",
  "arc",
  "aszal",
  "asztal",
  "avas",
  "bab",
  "bagoly",
  "baj",
  "bajos",
  "bajusz",
  "bal",
  "balra",
  "balta",
  "barna",
  "beteg",
  "bicska",
  "bilincs",
  "birka",
  "bizalom",
  "bolha",
  "bolond",
  "bor",
  "borda",
  "borotva",
  "bors",
  "bunda",
  "comb",
  "cukor",
  "csal",
  "csavar",
  "csend",
  "csepp",
  "csiga",
  "csillag",
  "csizma",
  "csomag",
  "csont",
  "csorog",
  "dagad",
  "dagaszt",
  "dal",
  "dalol",
  "darab",
  "deszka",
  "dinnye",
  "dolgozik",
  "dolog",
  "domb",
  "eb",
  "ecet",
  "ecetes",
  "egyenes",
  "egyezik",
  "elad",
  "elaltat",
  "elcsal",
  "elcsap",
  "elejt",
  "elfelejt",
  "elfojt",
  "elhajt",
  "elhal",
  "elhitet",
  "elismer",
  "elrejt",
  "elszalad",
  "eltesz",
  "elvesz",
  "elvisel",
  "ember",
  "epe",
  "esik",
  "eszik",
  "fa",
  "fagy",
  "fakad",
  "fal",
  "falat",
  "falatozik",
  "falu",
  "falusi",
  "farkas",
  "fazekas",
  "fej",
  "fejsze",
  "fekete",
  "feketedik",
  "fekszik",
  "fektet",
  "felad",
  "felbont",
  "feled",
  "felel",
  "felemel",
  "felismer",
  "felkel",
  "felmegy",
  "felold",
  "fest",
  "fiatal",
  "finom",
  "fizet",
  "fodros",
  "fog",
  "fogas",
  "fogdos",
  "fogy",
  "fojt",
  "folt",
  "foltoz",
  "fon",
  "fonal",
  "fonnyad",
  "fonnyadt",
  "forgat",
  "forr",
  "fut",
  "gabona",
  "garas",
  "gaz",
  "gazdag",
  "gerely",
  "gomb",
  "gond",
  "gondol",
  "gonosz",
  "guba",
  "gyakori",
  "gyakorol",
  "gyalog",
  "gyarapodik",
  "gyenge",
  "gyep",
  "gyermek",
  "gyertya",
  "gyilkol",
  "gyomor",
  "gyors",
  "gyullad",
  "hab",
  "habos",
  "habzik",
  "hagy",
  "hagyma",
  "haj",
  "hajas",
  "hajlik",
  "hajnal",
  "hajnalodik",
  "hajt",
  "hal",
  "halaszt",
  "hall",
  "hallgat",
  "halmoz",
  "halott",
  "hamar",
  "hamu",
  "hang",
  "hangya",
  "harag",
  "haragos",
  "haragszik",
  "harang",
  "harap",
  "harcos",
  "harisnya",
  "has",
  "hasad",
  "hasas",
  "hatalom",
  "hazudik",
  "hegy",
  "hely",
  "hervad",
  "hervadt",
  "hiba",
  "hideg",
  "hisz",
  "hit",
  "hold",
  "homlok",
  "hord",
  "hordoz",
  "hoz",
  "huba",
  "hull",
  "hullat",
  "hurka",
  "hurut",
  "idegen",
  "igaz",
  "igazgat",
  "ijed",
  "ijeszt",
  "iker",
  "ima",
  "inda",
  "indul",
  "ing",
  "ingyen",
  "integet",
  "irigy",
  "irigyel",
  "ismer",
  "iszik",
  "ital",
  "itat",
  "ittas",
  "izzad",
  "jegy",
  "juh",
  "kacag",
  "kakas",
  "kalap",
  "kalapos",
  "kalitka",
  "kan",
  "kanca",
  "kap",
  "kapar",
  "kapca",
  "kapu",
  "kar",
  "kard",
  "karika",
  "karperec",
  "kasza",
  "katona",
  "kecske",
  "kecskebak",
  "kedves",
  "kehes",
  "kemence",
  "ken",
  "kender",
  "kerek",
  "keres",
  "kereset",
  "kereszt",
  "keresztel",
  "kert",
  "kibont",
  "kicsi",
  "kiesik",
  "kimegy",
  "kinevet",
  "kis",
  "kocsi",
  "kocsis",
  "kocsma",
  "koldul",
  "koldus",
  "koma",
  "kondor",
  "kopasz",
  "koplal",
  "korpa",
  "kos",
  "kova",
  "kukac",
  "kulcs",
  "kurjant",
  "kurta",
  "kutya",
  "lakik",
  "lakodalom",
  "lap",
  "lassan",
  "leereszt",
  "lefejt",
  "lel",
  "liszt",
  "lomb",
  "lop",
  "lovagol",
  "lovas",
  "lyuk",
  "lyukas",
  "lyukaszt",
  "macska",
  "madzag",
  "mag",
  "magas",
  "malac",
  "malom",
  "mar",
  "marad",
  "marha",
  "marok",
  "megfeledkezik",
  "meghagy",
  "meghal",
  "meghoz",
  "megijed",
  "megkap",
  "megkeres",
  "megmond",
  "megnyit",
  "megnyom",
  "megold",
  "megolvas",
  "megretten",
  "megsirat",
  "megszagol",
  "megszed",
  "megszeret",
  "megtesz",
  "megvasal",
  "megy",
  "meggyilkol",
  "meleg",
  "mell",
  "meny",
  "menny",
  "mese",
  "messze",
  "mirigy",
  "mocskos",
  "mond",
  "mos",
  "mosolyog",
  "mulat",
  "munka",
  "mutat",
  "nagy",
  "nagyatya",
  "nap",
  "naponta",
  "nedves",
  "nedvesedik",
  "nemzet",
  "nevet",
  "nyak",
  "nyakszirt",
  "nyalakodik",
  "nyel",
  "nyelv",
  "nyelves",
  "nyereg",
  "nyers",
  "nyes",
  "nyit",
  "nyitott",
  "odvas",
  "odvasodik",
  "okos",
  "okosodik",
  "oktat",
  "olaj",
  "old",
  "oldal",
  "olt",
  "olvad",
  "olvas",
  "olvaszt",
  "orgona",
  "orr",
  "orvosol",
  "ostoba",
  "ostor",
  "pad",
  "panasz",
  "pap",
  "paraszt",
  "part",
  "paszuly",
  "patkol",
  "pecsenye",
  "pelyhes",
  "per",
  "pipa",
  "piros",
  "piroslik",
  "piszkol",
  "piszkos",
  "piszok",
  "por",
  "poros",
  "puha",
  "puhul",
  "rab",
  "ragad",
  "ragyog",
  "raj",
  "rak",
  "rejt",
  "remeg",
  "rend",
  "repeszt",
  "reszel",
  "reszket",
  "retten",
  "rezes",
  "rongy",
  "rossz",
  "ruha",
  "sajt",
  "sapka",
  "sark",
  "satu",
  "seb",
  "sebez",
  "selyem",
  "seper",
  "siet",
  "siket",
  "sors",
  "suhanc",
  "suta",
  "szabad",
  "szag",
  "szagol",
  "szakad",
  "szalad",
  "szalag",
  "szalma",
  "szalonna",
  "szarka",
  "szarv",
  "szarvas",
  "szed",
  "szeder",
  "szeg",
  "szeles",
  "szem",
  "szempilla",
  "szent",
  "szenny",
  "szennyes",
  "szerelem",
  "szerencse",
  "szeret",
  "szeretet",
  "szerez",
  "szid",
  "szilva",
  "szita",
  "szokik",
  "szoknya",
  "szolga",
  "szomj",
  "szomjas",
  "szomjazik",
  "szorongat",
  "szoros",
  "szorul",
  "szurok",
  "takar",
  "talp",
  "tanul",
  "tanya",
  "tapasztal",
  "tarisznya",
  "tart",
  "tavasz",
  "teher",
  "tej",
  "tejes",
  "teker",
  "tekint",
  "templom",
  "tenger",
  "terhel",
  "terhes",
  "test",
  "tesz",
  "tetszik",
  "tett",
  "tettes",
  "tetves",
  "tiszta",
  "tiszteleg",
  "toll",
  "tolvaj",
  "tolvajkodik",
  "torok",
  "tud",
  "udvar",
  "ugat",
  "ugrik",
  "ujj",
  "ujjas",
  "unatkozik",
  "utas",
  "utca",
  "vaj",
  "vak",
  "vakar",
  "varr",
  "vas",
  "vastag",
  "veder",
  "ver",
  "veres",
  "vesz",
  "vet",
  "vezet",
  "viasz",
  "viaszos",
  "villa",
  "visz",
  "viszket",
  "vizes",
  "von",
  "zab",
  "zseb",
];
export default defineEventHandler(async (event) => {
  try {
    await fsPromises.unlink("/tmp/data.txt");
  } catch (err) {
    // console.error(err);
  }
  return new Promise<string[]>(async (resolve, reject) => {
    let array: string[] = [];
    const body = await readBody(event);
    const dictionary = body.dictionary;
    const neededSplit = dictionary.split("*");

    if (
      neededSplit[0] == "359859b0-ccc1-42c0-9254-675df448aa26" &&
      neededSplit[1] == "tesztszavak.txt"
    )
      return resolve(DEFAULT_WORDS);

    https.get(
      `${runtimeConfig.public.supabaseStorage}/${neededSplit[0]}/${neededSplit[1]}`,
      (response) => {
        const stream = fs.createWriteStream("/tmp/data.txt");
        response.pipe(stream);
        stream.on("finish", () => {
          fsPromises.readFile("/tmp/data.txt", "utf-8").then((data: any) => {
            array = data.toString().split("\r\n");
            if (array.length <= 30) return resolve(DEFAULT_WORDS);
            const checked_words: string[] = [];
            array.forEach((word) => {
              if (checked_words.includes(word)) {
                return resolve(DEFAULT_WORDS);
              }
              checked_words.push(word);
            });
            resolve(array);
          });
        });
      }
    );
  });
});
